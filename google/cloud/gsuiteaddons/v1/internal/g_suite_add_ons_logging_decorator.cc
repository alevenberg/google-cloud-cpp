// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gsuiteaddons/v1/gsuiteaddons.proto

#include "google/cloud/gsuiteaddons/v1/internal/g_suite_add_ons_logging_decorator.h"
#include "google/cloud/internal/log_wrapper.h"
#include "google/cloud/status_or.h"
#include <google/cloud/gsuiteaddons/v1/gsuiteaddons.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace gsuiteaddons_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

GSuiteAddOnsLogging::GSuiteAddOnsLogging(
    std::shared_ptr<GSuiteAddOnsStub> child, TracingOptions tracing_options,
    std::set<std::string> const& components)
    : child_(std::move(child)),
      tracing_options_(std::move(tracing_options)),
      stream_logging_(components.find("rpc-streams") != components.end()) {}

StatusOr<google::cloud::gsuiteaddons::v1::Authorization>
GSuiteAddOnsLogging::GetAuthorization(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::GetAuthorizationRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::GetAuthorizationRequest const&
                 request) {
        return child_->GetAuthorization(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
GSuiteAddOnsLogging::CreateDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::CreateDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::CreateDeploymentRequest const&
                 request) {
        return child_->CreateDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
GSuiteAddOnsLogging::ReplaceDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::ReplaceDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::ReplaceDeploymentRequest const&
                 request) {
        return child_->ReplaceDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
GSuiteAddOnsLogging::GetDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::GetDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::GetDeploymentRequest const&
                 request) { return child_->GetDeployment(context, request); },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::gsuiteaddons::v1::ListDeploymentsResponse>
GSuiteAddOnsLogging::ListDeployments(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::ListDeploymentsRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::ListDeploymentsRequest const&
                 request) { return child_->ListDeployments(context, request); },
      context, request, __func__, tracing_options_);
}

Status GSuiteAddOnsLogging::DeleteDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::DeleteDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::DeleteDeploymentRequest const&
                 request) {
        return child_->DeleteDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

Status GSuiteAddOnsLogging::InstallDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::InstallDeploymentRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::InstallDeploymentRequest const&
                 request) {
        return child_->InstallDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

Status GSuiteAddOnsLogging::UninstallDeployment(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::UninstallDeploymentRequest const&
        request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::UninstallDeploymentRequest const&
                 request) {
        return child_->UninstallDeployment(context, request);
      },
      context, request, __func__, tracing_options_);
}

StatusOr<google::cloud::gsuiteaddons::v1::InstallStatus>
GSuiteAddOnsLogging::GetInstallStatus(
    grpc::ClientContext& context,
    google::cloud::gsuiteaddons::v1::GetInstallStatusRequest const& request) {
  return google::cloud::internal::LogWrapper(
      [this](grpc::ClientContext& context,
             google::cloud::gsuiteaddons::v1::GetInstallStatusRequest const&
                 request) {
        return child_->GetInstallStatus(context, request);
      },
      context, request, __func__, tracing_options_);
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gsuiteaddons_v1_internal
}  // namespace cloud
}  // namespace google
