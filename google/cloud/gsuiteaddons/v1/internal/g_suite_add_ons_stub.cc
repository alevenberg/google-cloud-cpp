// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gsuiteaddons/v1/gsuiteaddons.proto

#include "google/cloud/gsuiteaddons/v1/internal/g_suite_add_ons_stub.h"
#include "google/cloud/grpc_error_delegate.h"
#include "google/cloud/status_or.h"
#include <google/cloud/gsuiteaddons/v1/gsuiteaddons.grpc.pb.h>
#include <memory>

namespace google {
namespace cloud {
namespace gsuiteaddons_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

GSuiteAddOnsStub::~GSuiteAddOnsStub() = default;

StatusOr<google::cloud::gsuiteaddons::v1::Authorization>
DefaultGSuiteAddOnsStub::GetAuthorization(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::GetAuthorizationRequest const& request) {
  google::cloud::gsuiteaddons::v1::Authorization response;
  auto status =
      grpc_stub_->GetAuthorization(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
DefaultGSuiteAddOnsStub::CreateDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::CreateDeploymentRequest const& request) {
  google::cloud::gsuiteaddons::v1::Deployment response;
  auto status =
      grpc_stub_->CreateDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
DefaultGSuiteAddOnsStub::ReplaceDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::ReplaceDeploymentRequest const& request) {
  google::cloud::gsuiteaddons::v1::Deployment response;
  auto status =
      grpc_stub_->ReplaceDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::gsuiteaddons::v1::Deployment>
DefaultGSuiteAddOnsStub::GetDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::GetDeploymentRequest const& request) {
  google::cloud::gsuiteaddons::v1::Deployment response;
  auto status = grpc_stub_->GetDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

StatusOr<google::cloud::gsuiteaddons::v1::ListDeploymentsResponse>
DefaultGSuiteAddOnsStub::ListDeployments(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::ListDeploymentsRequest const& request) {
  google::cloud::gsuiteaddons::v1::ListDeploymentsResponse response;
  auto status =
      grpc_stub_->ListDeployments(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

Status DefaultGSuiteAddOnsStub::DeleteDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::DeleteDeploymentRequest const& request) {
  google::protobuf::Empty response;
  auto status =
      grpc_stub_->DeleteDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return google::cloud::Status();
}

Status DefaultGSuiteAddOnsStub::InstallDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::InstallDeploymentRequest const& request) {
  google::protobuf::Empty response;
  auto status =
      grpc_stub_->InstallDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return google::cloud::Status();
}

Status DefaultGSuiteAddOnsStub::UninstallDeployment(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::UninstallDeploymentRequest const&
        request) {
  google::protobuf::Empty response;
  auto status =
      grpc_stub_->UninstallDeployment(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return google::cloud::Status();
}

StatusOr<google::cloud::gsuiteaddons::v1::InstallStatus>
DefaultGSuiteAddOnsStub::GetInstallStatus(
    grpc::ClientContext& client_context,
    google::cloud::gsuiteaddons::v1::GetInstallStatusRequest const& request) {
  google::cloud::gsuiteaddons::v1::InstallStatus response;
  auto status =
      grpc_stub_->GetInstallStatus(&client_context, request, &response);
  if (!status.ok()) {
    return google::cloud::MakeStatusFromRpcError(status);
  }
  return response;
}

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gsuiteaddons_v1_internal
}  // namespace cloud
}  // namespace google
