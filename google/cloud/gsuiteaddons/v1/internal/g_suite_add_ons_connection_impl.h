// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the Codegen C++ plugin.
// If you make any local changes, they will be lost.
// source: google/cloud/gsuiteaddons/v1/gsuiteaddons.proto

#ifndef GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_GSUITEADDONS_V1_INTERNAL_G_SUITE_ADD_ONS_CONNECTION_IMPL_H
#define GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_GSUITEADDONS_V1_INTERNAL_G_SUITE_ADD_ONS_CONNECTION_IMPL_H

#include "google/cloud/gsuiteaddons/v1/g_suite_add_ons_connection.h"
#include "google/cloud/gsuiteaddons/v1/g_suite_add_ons_connection_idempotency_policy.h"
#include "google/cloud/gsuiteaddons/v1/g_suite_add_ons_options.h"
#include "google/cloud/gsuiteaddons/v1/internal/g_suite_add_ons_retry_traits.h"
#include "google/cloud/gsuiteaddons/v1/internal/g_suite_add_ons_stub.h"
#include "google/cloud/background_threads.h"
#include "google/cloud/backoff_policy.h"
#include "google/cloud/options.h"
#include "google/cloud/status_or.h"
#include "google/cloud/stream_range.h"
#include "google/cloud/version.h"
#include <memory>

namespace google {
namespace cloud {
namespace gsuiteaddons_v1_internal {
GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_BEGIN

class GSuiteAddOnsConnectionImpl
    : public gsuiteaddons_v1::GSuiteAddOnsConnection {
 public:
  ~GSuiteAddOnsConnectionImpl() override = default;

  GSuiteAddOnsConnectionImpl(
      std::unique_ptr<google::cloud::BackgroundThreads> background,
      std::shared_ptr<gsuiteaddons_v1_internal::GSuiteAddOnsStub> stub,
      Options options);

  Options options() override { return options_; }

  StatusOr<google::cloud::gsuiteaddons::v1::Authorization> GetAuthorization(
      google::cloud::gsuiteaddons::v1::GetAuthorizationRequest const& request)
      override;

  StatusOr<google::cloud::gsuiteaddons::v1::Deployment> CreateDeployment(
      google::cloud::gsuiteaddons::v1::CreateDeploymentRequest const& request)
      override;

  StatusOr<google::cloud::gsuiteaddons::v1::Deployment> ReplaceDeployment(
      google::cloud::gsuiteaddons::v1::ReplaceDeploymentRequest const& request)
      override;

  StatusOr<google::cloud::gsuiteaddons::v1::Deployment> GetDeployment(
      google::cloud::gsuiteaddons::v1::GetDeploymentRequest const& request)
      override;

  StreamRange<google::cloud::gsuiteaddons::v1::Deployment> ListDeployments(
      google::cloud::gsuiteaddons::v1::ListDeploymentsRequest request) override;

  Status DeleteDeployment(
      google::cloud::gsuiteaddons::v1::DeleteDeploymentRequest const& request)
      override;

  Status InstallDeployment(
      google::cloud::gsuiteaddons::v1::InstallDeploymentRequest const& request)
      override;

  Status UninstallDeployment(
      google::cloud::gsuiteaddons::v1::UninstallDeploymentRequest const&
          request) override;

  StatusOr<google::cloud::gsuiteaddons::v1::InstallStatus> GetInstallStatus(
      google::cloud::gsuiteaddons::v1::GetInstallStatusRequest const& request)
      override;

 private:
  std::unique_ptr<google::cloud::BackgroundThreads> background_;
  std::shared_ptr<gsuiteaddons_v1_internal::GSuiteAddOnsStub> stub_;
  Options options_;
};

GOOGLE_CLOUD_CPP_INLINE_NAMESPACE_END
}  // namespace gsuiteaddons_v1_internal
}  // namespace cloud
}  // namespace google

#endif  // GOOGLE_CLOUD_CPP_GOOGLE_CLOUD_GSUITEADDONS_V1_INTERNAL_G_SUITE_ADD_ONS_CONNECTION_IMPL_H
